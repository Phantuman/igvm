#!/usr/bin/env python
#
# igvm - InnoGames VM Management Tool
#
# Copyright (c) 2016, InnoGames GmbH
#

"""InnoGames VM Management Tool"""

from argparse import ArgumentParser

from fabric.network import disconnect_all

import adminapi

from igvm.buildvm import buildvm
from igvm.migratevm import migratevm
from igvm.resources import disk_set

top_parser = ArgumentParser(__doc__)
subparsers = top_parser.add_subparsers(
    help='Actions',
)

subparser = subparsers.add_parser(
    'create',
    description=(__doc__ + ' - Create VM'),
)
subparser.set_defaults(func=buildvm)
subparser.add_argument(
    'vm_hostname',
    help='Hostname of the guest system',
)
subparser.add_argument(
    '--localimage',
    help='Image file for for installation from local fs',
)
subparser.add_argument(
    '--postboot',
    metavar='postboot_script',
    help='Run postboot_script on the guest after first boot',
)
subparser.add_argument(
    '--nopuppet',
    action='store_true',
    help='Skip running puppet in chroot before powering up',
)

subparser = subparsers.add_parser(
    'migrate',
    description=(__doc__ + ' - Migrate VM'),
)
subparser.set_defaults(func=migratevm)
subparser.add_argument(
    'vm_hostname',
    help='Hostname of the guest system',
)
subparser.add_argument(
    'dsthv_hostname',
    help='Hostname of destination hypervisor',
)
subparser.add_argument(
    '--newip',
    metavar='IP address',
    help='IP address to move VM to, in case you migrate between segments',
)
subparser.add_argument(
    '--nopuppet',
    action='store_true',
    help='Skip running puppet in chroot before powering up',
)
subparser.add_argument(
    '--nolbdowntime',
    action='store_true',
    help="Don't use testtool's downtime feature during migration",
)
subparser.add_argument(
    '--offline',
    action='store_true',
    help='Force offline migration',
)

subparser = subparsers.add_parser(
    'disk-set',
    description=(__doc__ + ' - Set VM Disk Size'),
)
subparser.set_defaults(func=disk_set)
subparser.add_argument(
    'vm_hostname',
    help='Hostname of the guest system',
)
subparser.add_argument(
    'size',
    help='New disk size in GiBs (can be specified relative with "+")',
)

adminapi.auth()

args = vars(top_parser.parse_args())
args.pop('func')(**args)

# Disconnect all Fabric sessions to avoid errors during shutdown.
disconnect_all()
